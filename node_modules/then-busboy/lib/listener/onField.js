"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Field = _interopRequireDefault(require("../Field"));

var _restoreType = _interopRequireDefault(require("../util/restoreType"));

var _getFieldPath = _interopRequireDefault(require("../util/getFieldPath"));

var _FieldSizeLimitError = _interopRequireDefault(require("../error/FieldSizeLimitError"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @api private
 */
const onField = ({
  restoreTypes,
  limits
}, cb) => (fieldname, value, fieldnameTruncated, valueTruncated, enc, mime) => {
  if (valueTruncated) {
    return cb(new _FieldSizeLimitError.default(`Limit reached: Available up to ${limits.fieldSize} bytes per field.`));
  }

  try {
    value = restoreTypes ? (0, _restoreType.default)(value) : value;
    const path = (0, _getFieldPath.default)(fieldname);
    const field = new _Field.default({
      fieldname,
      value,
      fieldnameTruncated,
      valueTruncated,
      enc,
      mime
    });
    cb(null, [path, field]);
  } catch (err) {
    cb(err);
  }
};

var _default = onField;
exports.default = _default;